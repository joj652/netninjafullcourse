{"ast":null,"code":"var _jsxFileName = \"/home/george/Desktop/javascript/practive js/netninjacourse/netninjafullcourse/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('use effect ran');\n    fetch(\"http://localhost:8000/blogss\").then(res => {\n      if (!res.ok) {\n        throw Error('Could not fetch data for that resourse');\n      }\n\n      return res.json();\n    }).then(data => {\n      setBlogs(data);\n      setIsPending(false);\n    }).catch(err => {\n      setError(err.message);\n      console.log(err.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading ... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"All Blogs!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"044DnhhJhXRCTMVm5Z8RUcohJYM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/george/Desktop/javascript/practive js/netninjacourse/netninjafullcourse/src/Home.js"],"names":["React","useState","useEffect","BlogList","Home","blogs","setBlogs","isPending","setIsPending","error","setError","console","log","fetch","then","res","ok","Error","json","data","catch","err","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,cAAMC,KAAK,CAAC,wCAAD,CAAX;AACH;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,KANL,EAOKJ,IAPL,CAOUK,IAAI,IAAI;AACVb,MAAAA,QAAQ,CAACa,IAAD,CAAR;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAVL,EAWKY,KAXL,CAWWC,GAAG,IAAI;AACVX,MAAAA,QAAQ,CAACW,GAAG,CAACC,OAAL,CAAR;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,OAAhB;AACH,KAdL;AAgBH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACKb,KAAK,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YADd,EAEKF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFlB,EAIKF,KAAK,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjCD;;GAAMD,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport BlogList from './BlogList';\n\nconst Home = () => {\n    const [blogs, setBlogs] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        console.log('use effect ran');\n        fetch(\"http://localhost:8000/blogss\")\n            .then(res => {\n                if (!res.ok) {\n                    throw Error('Could not fetch data for that resourse')\n                }\n                return res.json();\n            })\n            .then(data => {\n                setBlogs(data);\n                setIsPending(false)\n            })\n            .catch(err => {\n                setError(err.message);\n                console.log(err.message);\n            })\n\n    }, [])\n\n    return (\n        <div className=\"home\">\n            {error && <div>{error}</div>}\n            {isPending && <div> Loading ... </div>}\n            {/* //first check if blog has data .. if null means false */}\n            {blogs && <BlogList blogs={blogs} title=\"All Blogs!\" />}\n        </div>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}